# Фасад (Facade) - это структурный паттерн проектирования, который предоставляет
# простой интерфейс к сложной системе классов, библиотеке или фреймворку.
#
# Фасад скрывает от клиента множество мелких деталей к сложной системе классов, предоставляя
# для этого простой интерфейс. В частности, скрывает такие детали, как: инициализация нужных
# классов, их привязка друг к другов, вызов определенных методов в той или иной последовательсности и т.д.
# Фасад может иметь урезанный интерфейс, не имеющий 100% функциональности. Его основная обязанность - это
# предоставить клиенту самые часто используемые фичи.
#
# Если Фасад берет на берет на себя слишком много ответственности, то его можно разделить на множество составных
# частей (Single responsibility principle). Есть возможность реализовать ассоциацию друг с другом и т.д.
#
# Применимость:
# 1. Когда вам нужно представить простой или урезанный интерфейс к сложной подсистеме.
# 2. Когда вы хотите разложить подсистему на отдельные слои.
#
# Можно разбить подсистему на слои (например, взяв сложную систему видеоконвертации, слоями могут выступать - аудио
# и видео, для каждой из этих подчастей можно создать фасад, и заставить классы слоев общаться друг с другом не
# напрямую, а через эти фасады).
#
# Плюсы:
# 1. Изолирует клиентов от компонентов системы.
# 2. Уменьшает зависимость между подсистемой и клиентами.
#
# Минусы:
# 1. Фасад рискует быть "божественным" объектом, привязанным ко всем классам программы.
