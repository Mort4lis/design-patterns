# Одиночка (Singleton) - это порождающий паттерн проектирования, который гарантирует,
# что у класса есть только один экземпляр, и предоставляет к нему глобальную точку
# доступа.
#
# Применимость:
# 1. Когда в программе должен быть единственный экземпляр какого-то класса, доступный всем
# клиентам (например, общий доступ к БД из разных частей программы)
#
# 2. Когда вам хочется иметь больше контроля над глобальными переменными.
#
# В отличие от глобальных переменных, Одиночка грантирует, что никакой
# другой код не заменит созданный экземпляр класса, поэтому вы всегда уверены
# в наличие лишь одного объекта-одиночки.
#
# Плюсы:
# 1. Гарантирует наличие единственного экземпляра класса.
# 2. Предоставляет к нему глобальную точку доступа.
# 3. Реализует отложенную инициализацию объекта одиночки.
#
# Минусы:
# 1. Нарушает single responsibility principle.
# 2. Маскирует плохой дизайн.
# 3. Проблемы мультипоточности.
# 4. Требует постоянного создания Mock-объектов при юнит-тестировании.
