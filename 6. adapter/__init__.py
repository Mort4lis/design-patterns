# Адаптер (Adapter) - это струтурный паттерн проектирования, позволяющий
# объектам с несовместимыми интерфейсами работать вместе.
#
# Варианты реализации:
# 1. Адаптер объектов
#
# Предположим, что у нас есть клиентский код, который работает с объектом
# какого-либо класса. Так вот, мы создаем адаптер (класс), который следует
# интерфейсу класса к которому привязан клиентский код,
# а также содержит ссылку на объект-сервис (композиция). Все методы адаптера
# пробрасывают вызовы к другому объекту-сервису. В результате - клиентский код
# и сервис общаются друг с другом, через объект адаптер, причем клиентский код
# даже не подозревает о подмене.
#
# 2. Адаптер классов
#
# Адаптер наследуется от двух классов (клинтского интерфейса) и класса объекта-сервиса.
# И также пробрасывает методы от одного класса к другому.
#
# Работает только в ЯП где существует множественное наследование.
#
# Применимость:
# 1. Когда вы хотите применить сторонний класс, но его интерфейс не соответствует
# остальному коду приложения (клиентскому коду)
#
# Плюсы:
# 1. Отделяет и скрывает от клиента подробности преобразования различных интерфейсов
#
# Минусы:
# 1. Усложняет код программы за счет дополнительных классов.
