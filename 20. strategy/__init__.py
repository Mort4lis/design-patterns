# Стратегия (Strategy) - это поведенческий паттерн проектирования, который определяет
# семейство схожих алгоритмов и помещает каждый из них в собственный класс. После чего
# алгоритмы можно взаимозаменять прямо во время выполнения программы.
#
# Применимость:
# 1. Когда вам нужно использовать разные вариации какого-то алгоритма внутри одного объекта.
#
# 2. Когда у вас есть множество похожих классов, отличающихся только некоторым поведением.
#
# 3. Когда вы не хотите обнажать детали реализации алгоритмов для других классов.
#
# Стратегия позволяет изолировать код, данные и зависимости алгоритмов от других объектов, скрыв
# внутри собственных классов.
#
# 4. Когда различные вариации алгоритмов реализованы в виде развесистого условного оператора. Каждая
# ветка такого оператора представляет вариацию алгоритма.
#
# Плюсы:
# 1. Горячая замена алгоритмов на лету.
# 2. Изолирует код и данные алгоритмов от остальных классов.
# 3. Уход от наследования к делегированию.
# 4. Реализует open/close-principle.
#
# Минусы:
# 1. Усложняет программу за счет дополнительных классов
# 2. Клиент должен знать, в чем разница между стратегиями, чтобы выбрать подходящую.
