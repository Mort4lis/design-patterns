# Принцип инверсии зависимостей

# Классы верхних уровней не должны зависеть от классов более низких уровней.
# Оба должны зависеть от абстракций. Абстракции не должны зависеть от деталей.
# Детали должны зависеть от абстракций.

# Классы нижнего уровня - классы, которые реализуют операции вроде работы с диском,
# передачи данных по сети, подключению к БД и прочее.
#
# Классы верхнего уровня - содержат бизнес-логику программы, которая опирается на классы
# низкого уровня.

# Зачастую мы изначально проектируем классы низких уровней, а затем только беремся за
# более высокий. В итоге - наш класс бизнес-логики становится зависимым от более примитивных
# низкоуровневых классов

# Принцип инверсии зависимостей предлагает изменить направление проектирования таких классов:
# 1. Для начала нам нужно описать интерфейс для низкоуровневых операций, которые нужны классу
# бизнес-логики.
#
# 2. Это позволит нам убрать зависимость класса бизнес-логики от конкретного низкоуровневого класса,
# заменив "мягкой" зависимостью от интерфейса.
#
# 3. Низкоуровневых класс, в свою очередь, станет зависимым от интерфейса, определенного бизнес-логикой.
