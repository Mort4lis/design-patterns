# Абстрактная фабрика (Abstract Factory) - это порождающий паттерн проектирования,
# который позволяет создавать семейства связанных объектов, не привязываясь
# к конкретным классам создаваемых объектов.
#
# Применимость:
# 1. Когда бизнес-логика программы должна работать с разными видами связанных
# продуктов, не завися от конкретных классов продуктов
#
# Абстрактная фабрика скрывает от клиентского кода подробности того,
# как и какие конкретно объекты будут созданы. Но при этом клиентский
# код будем работать со всеми типами создаваемых продуктов, т.к их
# общий интерфейс заранее определен
#
# 2. Когда в программе уже используется Фабричный метод, но очередные изменения
# предполагают введение новых типов продуктов
#
# Если класс содержит много фабричных методов - это не очень хорошо, т.к
# это затуманит основную задачу этого класса. Поэтому в таких ситуациях
# лучше выделить код создания новых продуктов в отдельную Абстрактную фабрику
#
# Плюсы:
# 1. Гарантирует сочетаемость создаваемых продуктов (то есть весь набор продуктов
# будет принадлежать одному семейству).
# 2. Избавляет клиентский код от привязки к конкретным классам продуктов (за счет того, что
# каждый тип продуктов имеет свой интерфейс, и клиентскому коду все равно с каким продуктом
# он работает, т.к он работает с ним через общий интерфейс).
# 3. Выделяет код производства продуктов в одно место, упрощая поддержку кода.
# 4. Упрощает добавление новых продуктов в программу.
# 5. Реализует open/close-principle.
#
# Минусы:
# 1. Усложняет код программы за счет множества дополнительных классов.
# 2. Требует наличия всех типов продуктов в каждой вариации (семействе).
